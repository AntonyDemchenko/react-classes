{"version":3,"sources":["Store/Store.ts","EventEmitter.js","LogIn/LogIn.js","Registration/Registartion.js","Footer/Filter/Filter.tsx","Footer/Footer.tsx","Input/Input.js","Tasks/TasksItem/TasksItem.js","Tasks/Tasks.js","TodoApp/TodoApp.tsx","Header/Header.tsx","App.tsx","api.js","index.js"],"names":["FilterType","emitter","EventEmitter","_this","Object","classCallCheck","this","_super","call","events","eventName","data","event","forEach","fn","_this2","push","filter","eventFn","react","Component","LogIn","state","username","password","todosRef","React","createRef","_callee","newData","response","regenerator_default","a","wrap","_context","prev","next","JSON","stringify","fetch","method","headers","Content-Type","body","sent","abrupt","json","stop","login","then","console","log","localStorage","setItem","emit","status","preventDefault","setState","e","trim","react_default","createElement","className","onSubmit","handleSubmit","type","placeholder","value","onChange","setUserName","target","setPassword","react_router_dom","to","Registration","loginRef","registration","accessToken","accesstoken","refreshToken","detectRegistration","succesStatus","current","click","_this3","ref","Filter","props","buttons","selectedButton","filterType","map","item","onClick","setFilter","bind","key","Date","now","Math","random","Footer","todos","completed","length","setCountActiveTodos","Footer_Filter_Filter","deleteAllCheckedTodos","Input","inputValue","keyCode","title","onKeyDown","handleClick","handleChange","TasksItem","todo","id","closest","getAttribute","item-id","todo_id","checked","handleOnChange","stopPropagation","handleClickDelete","Tasks","newState","todosList","every","checkAllTodos","filterTodos","Tasks_TasksItem_TasksItem","store","Store","oldTodoList","construct","Array","toConsumableArray","subscribe","addItemToStore","setFilterType","TodoApp","updateDate","Fragment","src_Input_Input","src_Tasks_Tasks","src_Footer_Footer","Header","setUsername","clear","logOut","App","checkLogin","src_Header_Header","react_router","path","element","src_TodoApp_TodoApp","src_LogIn_LogIn","Registartion","api","Api","parse","getItem","Authorization","getAccessToken","_callee2","_context2","_callee3","_context3","concat","_callee4","_context4","_callee5","completedSwitcher","_context5","_callee6","_context6","getDataFromDB","user","tokens","catch","error","addNewItemDB","deleteItemFromDB","deleteItemFromStore","changeCompletedStatusOfItemDB","changeCompletedStatusOfItemStore","checkAllTodosDB","deleteAllCheckedTodosDB","ReactDOM","render","StrictMode","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.4e99d28c.chunk.js","sourcesContent":["import emitter from \"../EventEmitter\";\n// import { v4 as uuidv4 } from \"uuid\";\n\ntype TodoType = {\n  title: string;\n  todo_id: string;\n  completed: boolean;\n};\n\ntype StateType = {\n  todos: Array<TodoType>;\n  filterType: \"all\" | \"active\" | \"completed\";\n  username: string;\n};\nenum FilterType {\n  all = \"all\",\n  active = \"active\",\n  completed = \"completed\",\n}\n\ntype FilterData = {\n  filterType: FilterType;\n};\n\nclass Store {\n  state: StateType;\n  constructor() {\n    // super();\n    this.state = { todos: [], filterType: \"all\", username: \"\" };\n  }\n\n  addItemToStore(data: TodoType): void {\n    const oldTodoList = this.state.todos;\n    const newState = new Array(...oldTodoList);\n\n    newState.push({\n      title: data.title,\n      todo_id: data.todo_id,\n      completed: data.completed,\n    });\n\n    this.state.todos = newState;\n\n    emitter.emit(\"event: update-store\", {});\n  }\n\n  deleteItemFromStore(id: string): void {\n    const oldTodoList = this.state.todos;\n    let newState = new Array(...oldTodoList);\n\n    newState = newState.filter((item) => item.todo_id !== id);\n    this.state.todos = newState;\n    emitter.emit(\"event: update-store\");\n  }\n\n  changeCompletedStatusOfItemStore(data: TodoType): void {\n    const oldTodoList = this.state.todos;\n    let newState = new Array(...oldTodoList);\n    newState = newState.map((item) => {\n      if (item.todo_id === data.todo_id) {\n        item.completed = !item.completed;\n        return item;\n      }\n      return item;\n    });\n    this.state.todos = newState;\n\n    emitter.emit(\"event: update-store\");\n  }\n\n  checkAllTodos(): void {\n    const oldTodoList = this.state.todos;\n    let newState = new Array(...oldTodoList);\n    if (newState.every((item) => item.completed === true)) {\n      newState = newState.map((item) => {\n        item.completed = false;\n        return item;\n      });\n    } else {\n      newState = newState.map((item) => {\n        item.completed = true;\n        return item;\n      });\n    }\n\n    this.state.todos = newState;\n    emitter.emit(\"event: update-store\", {});\n  }\n\n  deleteAllCheckedTodos(): void {\n    const oldTodoList = this.state.todos;\n    let newState = new Array(...oldTodoList);\n    newState = newState.filter((item) => item.completed === false);\n    this.state.todos = newState;\n    emitter.emit(\"event: update-store\");\n  }\n\n  setFilterType(data: FilterData): void {\n    const newState = data.filterType;\n    this.state.filterType = newState;\n    emitter.emit(\"event: update-store\");\n  }\n}\n\nconst store = new Store();\n\nemitter.subscribe(\"event:add-item\", (data: TodoType) =>\n  store.addItemToStore(data)\n);\n\nemitter.subscribe(\"event:change-filter-type\", (data: FilterData) =>\n  store.setFilterType(data)\n);\n\nexport default store;\n","import react from \"react\";\n\nclass EventEmitter extends react.Component {\n  constructor() {\n    super();\n    this.events = {};\n  }\n\n  emit(eventName, data) {\n    const event = this.events[eventName];\n    if (event) {\n      event.forEach((fn) => {\n        fn.call(null, data);\n      });\n    }\n  }\n\n  subscribe(eventName, fn) {\n    if (!this.events[eventName]) {\n      this.events[eventName] = [];\n    }\n\n    this.events[eventName].push(fn);\n    return () => {\n      this.events[eventName] = this.events[eventName].filter(\n        (eventFn) => fn !== eventFn\n      );\n    };\n  }\n}\n\nconst emitter = new EventEmitter();\n\nexport default emitter;\n","import React from \"react\";\nimport \"./LogIn.css\";\nimport { NavLink } from \"react-router-dom\";\nimport emitter from \"../EventEmitter\";\nclass LogIn extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      username: \"\",\n      password: \"\",\n    };\n    this.todosRef = React.createRef();\n  }\n  async login(data) {\n    const newData = JSON.stringify(data);\n\n    const response = await fetch(\"http://localhost:3000/login\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: newData,\n    });\n    return response.json();\n  }\n\n  handleSubmit(event) {\n    this.login(this.state).then((data) => {\n      console.log(data);\n      localStorage.setItem(\"token\", JSON.stringify(data));\n      emitter.emit(\"event: check-login\", { login: data.status });\n    });\n    event.preventDefault();\n\n    this.setState({ username: \"\", password: \"\" });\n  }\n\n  setUserName(e) {\n    this.setState({ username: e.trim() });\n  }\n\n  setPassword(e) {\n    this.setState({ password: e.trim() });\n  }\n\n  render() {\n    return (\n      <div className=\"login\">\n        <h1 className=\"login_title\">LOG IN</h1>\n        <form\n          className=\"login_form\"\n          onSubmit={(event) => this.handleSubmit(event)}\n        >\n          <input\n            type=\"text\"\n            placeholder=\"Username\"\n            value={this.state.username}\n            onChange={(e) => this.setUserName(e.target.value)}\n          />\n\n          <input\n            type=\"password\"\n            placeholder=\"Password\"\n            value={this.state.password}\n            onChange={(e) => this.setPassword(e.target.value)}\n          />\n\n          <div className=\"submit\">\n            <button\n              className=\"submit_btn\"\n              type=\"submit\"\n              value={this.state.password}\n            >\n              Submit\n            </button>\n          </div>\n        </form>\n\n        <div className=\"links\">\n          <NavLink to=\"/registration\" className=\"sign-up\">\n            Sign up!\n          </NavLink>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default LogIn;\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport \"./Registration.css\";\nimport emitter from \"../EventEmitter\";\nclass Registration extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      username: \"\",\n      password: \"\",\n    };\n\n    this.loginRef = React.createRef();\n  }\n  async registration(data) {\n    const newData = JSON.stringify(data);\n\n    const response = await fetch(\"http://localhost:3000/registration\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: newData,\n    });\n    return response.json();\n  }\n\n  handleSubmit(event) {\n    this.registration(this.state).then((data) => {\n      console.log(\"reg\", data);\n      localStorage.setItem(\n        \"token\",\n        JSON.stringify({\n          accessToken: data.accesstoken,\n          refreshToken: data.refreshToken,\n        })\n      );\n      this.detectRegistration(data.status);\n\n      // if (data.status === 200) {\n      // emitter.emit(\"event: check-login\", { login: \"\" });\n      // }\n    });\n    event.preventDefault();\n    this.setState({ username: \"\", password: \"\" });\n  }\n\n  detectRegistration(succesStatus) {\n    if (succesStatus === 200) {\n      this.loginRef.current.click();\n      // emitter.emit(\"event: check-login\", { login: \"\" });\n    }\n  }\n\n  setUserName(e) {\n    this.setState({ username: e });\n  }\n\n  setPassword(e) {\n    this.setState({ password: e });\n  }\n\n  render() {\n    return (\n      <div className=\"reg\">\n        <h1 className=\"reg_title\">Registration</h1>\n\n        <form\n          className=\"reg_form\"\n          onSubmit={(event) => this.handleSubmit(event)}\n        >\n          <input\n            type=\"text\"\n            placeholder=\"Username\"\n            value={this.state.username}\n            onChange={(e) => this.setUserName(e.target.value)}\n          />\n\n          <input\n            type=\"password\"\n            placeholder=\"Password\"\n            value={this.state.password}\n            onChange={(e) => this.setPassword(e.target.value)}\n          />\n\n          <div className=\"submit\">\n            <button\n              className=\"submit_btn\"\n              type=\"submit\"\n              value={this.state.password}\n            >\n              Submit\n            </button>\n          </div>\n        </form>\n        <NavLink to=\"/\" className=\"sign-in\" ref={this.loginRef}>\n          Sign in!\n        </NavLink>\n      </div>\n    );\n  }\n}\n\nexport default Registration;\n","import React from \"react\";\nimport \"./Filter.css\";\nimport emitter from \"../../EventEmitter\";\n\ntype StateType = {\n  buttons: Array<string>;\n  selectedButton: string;\n};\n\ntype PropsType = {};\n\nclass Filter extends React.Component<{}, StateType, PropsType> {\n  state: StateType;\n  constructor(props: PropsType) {\n    super(props);\n\n    this.state = {\n      buttons: [\"all\", \"active\", \"completed\"],\n      selectedButton: \"all\",\n    };\n  }\n\n  setFilter(event: React.MouseEvent<HTMLButtonElement>): void {\n    this.setState({\n      selectedButton: (event.target as HTMLButtonElement).value,\n    });\n\n    emitter.emit(\"event:change-filter-type\", {\n      filterType: (event.target as HTMLButtonElement).value,\n    });\n  }\n\n  render() {\n    return (\n      <ul className=\"filter-btns\">\n        {this.state.buttons.map((item) => (\n          <button\n            className={\n              item === this.state.selectedButton\n                ? \"filter-btns selected\"\n                : \"filter-btn\"\n            }\n            onClick={this.setFilter.bind(this)}\n            value={item}\n            key={Date.now() * Math.random()}\n          >\n            {item}\n          </button>\n        ))}\n      </ul>\n    );\n  }\n}\n\nexport default Filter;\n","import React from \"react\";\nimport \"./Footer.css\";\nimport Filter from \"./Filter/Filter\";\nimport emitter from \"../EventEmitter\";\n\ntype TodoType = {\n  title: string;\n  todo_id: string;\n  completed: boolean;\n};\n\ntype PropsType = {\n  todos: Array<TodoType>;\n  filterType: string;\n  username: string;\n};\n\nclass Footer extends React.Component<PropsType> {\n  constructor(props: PropsType) {\n    super(props);\n    console.log(props);\n  }\n\n  setCountActiveTodos(): number {\n    const allTodos = this.props.todos;\n\n    const todosCount = allTodos.filter((item) => item.completed === false);\n\n    return todosCount.length;\n  }\n\n  deleteAllCheckedTodos(): void {\n    emitter.emit(\"event:delete-all-checked\");\n  }\n\n  render() {\n    console.log(\"ssssssssssssssssssssss\");\n    return (\n      <footer\n        className={this.props.todos.length === 0 ? \"footer\" : \"footer active\"}\n      >\n        <span className=\"todo-count\">\n          <span className=\"todo-count__number\">\n            {this.setCountActiveTodos() + \" \"}\n          </span>\n          <span className=\"todo-count__name\">item </span>\n          left\n        </span>\n        <Filter />\n        <button\n          className=\"delete-checked\"\n          onClick={(e) => this.deleteAllCheckedTodos()}\n        >\n          Clear completed\n        </button>\n      </footer>\n    );\n  }\n}\n\nexport default Footer;\n","import React from \"react\";\nimport \"./Input.css\";\nimport emitter from \"../EventEmitter\";\nimport { emit } from \"process\";\n\nclass Input extends React.Component {\n  constructor() {\n    super();\n    this.state = { inputValue: \"\" };\n  }\n\n  handleChange(event) {\n    this.setState({\n      inputValue: event.target.value,\n    });\n  }\n\n  handleClick(e) {\n    if (e.keyCode === 13 && e.target.value.trim()) {\n      emitter.emit(\"event:add-item-DB\", { title: e.target.value });\n      this.setState({\n        inputValue: \"\",\n      });\n    }\n  }\n\n  render() {\n    return (\n      <header className=\"input-header\">\n        <h1 className=\"main-title\">todos</h1>\n        <input\n          onKeyDown={(e) => this.handleClick(e)}\n          type=\"text\"\n          className=\"todo__input\"\n          placeholder=\"What needs to be done?\"\n          value={this.state.inputValue}\n          onChange={(event) => this.handleChange(event)}\n        />\n      </header>\n    );\n  }\n}\nexport default Input;\n","import React from \"react\";\nimport \"./TasksItem.css\";\nimport emitter from \"../../EventEmitter\";\nclass TasksItem extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { item: props.todo };\n  }\n\n  handleClickDelete(e) {\n    emitter.emit(\"event:delete-item\", {\n      id: e.target.closest(\"li\").getAttribute(\"item-id\"),\n    });\n  }\n\n  handleOnChange(e) {\n    emitter.emit(\"event:change-checkbox\", {\n      id: e.target.closest(\"li\").getAttribute(\"item-id\"),\n      completed: this.state.item.completed,\n    });\n  }\n\n  render() {\n    // console.log(this.state.item.completed);\n    return (\n      <li className=\"todos__item\" item-id={this.state.item.todo_id}>\n        <input\n          className=\"todos__toggle\"\n          type=\"checkbox\"\n          checked={this.state.item.completed}\n          onChange={(e) => {\n            this.handleOnChange(e);\n            e.stopPropagation();\n          }}\n        ></input>\n        <p className=\"todos__title\">{this.state.item.title}</p>\n        <button\n          className=\"todos__delete\"\n          onClick={(e) => {\n            this.handleClickDelete(e);\n            e.stopPropagation();\n          }}\n        >\n          &#215;\n        </button>\n      </li>\n    );\n  }\n}\n\nexport default TasksItem;\n","import React from \"react\";\nimport \"./Tasks.css\";\nimport TasksItem from \"./TasksItem/TasksItem\";\n// import store from \"../Store/Store\";\nimport emitter from \"../EventEmitter\";\nclass Tasks extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { todos: [] };\n  }\n\n  checkAllTodos() {\n    emitter.emit(\"event:change-all-checkboxes\");\n  }\n\n  filterTodos() {\n    let newState = [];\n\n    const filterType = this.props.filterType;\n    const todosList = this.props.todos;\n\n    if (filterType === \"all\") {\n      newState = todosList;\n    } else if (filterType === \"active\") {\n      newState = todosList.filter((item) => item.completed === false);\n    } else if (filterType === \"completed\") {\n      newState = todosList.filter((item) => item.completed === true);\n    }\n\n    return newState;\n  }\n\n  render() {\n    return (\n      <section\n        className={this.props.todos.length === 0 ? \"tasks\" : \"tasks active\"}\n      >\n        <button\n          className={\n            this.props.todos.length !== 0 &&\n            this.props.todos.every((item) => item.completed === true)\n              ? \"check-all active \"\n              : \"check-all\"\n          }\n          onClick={(e) => this.checkAllTodos()}\n        >\n          <p className=\"check-all__arrow\">❯</p>\n        </button>\n        <div className=\"todos-tasks\">\n          <ul className=\"todos-list\">\n            {this.filterTodos().map((item) => (\n              <TasksItem todo={item} key={item.todo_id} />\n            ))}\n          </ul>\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default Tasks;\n","import React from \"react\";\nimport Footer from \"../Footer/Footer\";\nimport Input from \"../Input/Input\";\nimport Tasks from \"../Tasks/Tasks\";\nimport store from \"../Store/Store\";\nimport emitter from \"../EventEmitter\";\n\ntype PropsType = {};\n\ntype TodoType = {\n  title: string;\n  todo_id: string;\n  completed: boolean;\n};\ntype StateType = {\n  todos: Array<TodoType>;\n  filterType: string;\n  username: string;\n};\n\nclass TodoApp extends React.Component<{}, PropsType> {\n  state: StateType;\n  constructor(props: PropsType) {\n    super(props);\n\n    this.state = {\n      todos: store.state.todos,\n      filterType: store.state.filterType,\n      username: store.state.username,\n    };\n  }\n\n  componentDidMount() {\n    // console.log(\"init!\");\n    emitter.emit(\"event:get-data-from-db\");\n    emitter.subscribe(\"event: update-store\", () => {\n      this.updateDate();\n    });\n  }\n\n  updateDate() {\n    this.setState({\n      todos: store.state.todos,\n      filterType: store.state.filterType,\n      username: store.state.username,\n    });\n  }\n\n  render() {\n    // console.log(this.state);\n    console.log(this.state);\n    return (\n      <>\n        <Input />\n        <Tasks {...this.state} />\n        <Footer {...this.state} />\n      </>\n    );\n  }\n}\n\nexport default TodoApp;\n","import React from \"react\";\nimport \"./Header.css\";\nimport store from \"../Store/Store\";\nimport emitter from \"../EventEmitter\";\n\ntype PropsType = {};\n\ntype StateType = {\n  username: string;\n};\nclass Header extends React.Component<PropsType, StateType> {\n  state: StateType;\n  constructor(props: PropsType) {\n    super(props);\n\n    this.state = {\n      username: store.state.username,\n    };\n  }\n\n  componentDidMount(): void {\n    emitter.subscribe(\"event: update-store\", () => {\n      this.setUsername();\n    });\n  }\n\n  setUsername(): void {\n    this.setState({\n      username: store.state.username,\n    });\n  }\n\n  logOut(): void {\n    // console.log(\"ddddddddddddddddddddddddd\");\n\n    localStorage.clear();\n    emitter.emit(\"event: check-login\", { login: \"\" });\n  }\n  render() {\n    return (\n      <header className=\"main-header\">\n        <div className=\"header__user\">\n          <div className=\"header__icon\"></div>\n          <p className=\"header__user-title\">user:</p>\n          <p className=\"header__username\">{this.state.username}</p>\n        </div>\n        <button className=\"header__logout\" onClick={this.logOut}>\n          Log out\n        </button>\n      </header>\n    );\n  }\n}\n\nexport default Header;\n","import React from \"react\";\nimport \"./App.css\";\n\nimport api from \"./api\";\nimport emitter from \"./EventEmitter\";\nimport { Routes, Route } from \"react-router-dom\";\nimport LogIn from \"./LogIn/LogIn\";\nimport Registration from \"./Registration/Registartion\";\nimport TodoApp from \"./TodoApp/TodoApp\";\nimport Header from \"./Header/Header\";\n\n// import store from \"./Store/Store.ts\";\n\ntype StateType = {\n  login: string;\n};\n\ntype PropsType = {};\n\nclass App extends React.Component<{}, StateType, PropsType> {\n  constructor(props: PropsType) {\n    super(props);\n\n    this.state = {\n      login: \"start\",\n    };\n  }\n\n  componentDidMount(): void {\n    emitter.subscribe(\"event: check-login\", (data: StateType) => {\n      this.checkLogin(data.login);\n    });\n  }\n\n  checkLogin(data: string): void {\n    this.setState({\n      login: data,\n    });\n  }\n\n  render() {\n    return (\n      <>\n        {this.state.login ? <Header /> : <></>}\n        <div className=\"container\">\n          <Routes>\n            <Route\n              path=\"/\"\n              element={this.state.login ? <TodoApp /> : <LogIn />}\n            ></Route>\n\n            <Route path=\"/registration\" element={<Registration />}></Route>\n          </Routes>\n        </div>\n      </>\n    );\n    // }\n  }\n}\n\nexport default App;\n","import store from \"./Store/Store.ts\";\nimport emitter from \"./EventEmitter\";\n\nclass Api {\n  constructor() {}\n\n  getAccessToken() {\n    return JSON.parse(localStorage.getItem(\"token\")) || \"fail\";\n  }\n\n  async getDataFromDB() {\n    console.log(\"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\");\n    // console.log(this.getAccessToken());\n    const response = await fetch(\"http://localhost:3000/todos\", {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: this.getAccessToken().accesstoken,\n      },\n    });\n    // console.log(response.json());\n    return response.json();\n  }\n\n  async addNewItemDB(data) {\n    const newData = JSON.stringify({ title: data.title });\n    const response = await fetch(\"http://localhost:3000/todos\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: this.getAccessToken().accesstoken,\n      },\n      body: newData,\n    });\n\n    // data.title = \" \";\n\n    return response.json();\n  }\n\n  async deleteItemFromDB(id) {\n    const response = await fetch(`http://localhost:3000/todos/${id}`, {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: this.getAccessToken().accesstoken,\n      },\n    });\n    return response.json();\n  }\n\n  async changeCompletedStatusOfItemDB(data) {\n    const response = await fetch(`http://localhost:3000/todos/${data.id}`, {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: this.getAccessToken().accesstoken,\n      },\n      body: JSON.stringify({ completed: !data.completed }),\n    });\n    return response.json();\n  }\n\n  async checkAllTodosDB() {\n    // console.log(\"ssssssssssssssssssssssssssssss\");\n    let completedSwitcher = true;\n    if (store.state.todos.every((item) => item.completed === true)) {\n      completedSwitcher = false;\n    }\n\n    const response = await fetch(\n      `http://localhost:3000/todos/check-all/${completedSwitcher}`,\n      {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: this.getAccessToken().accesstoken,\n        },\n      }\n    );\n  }\n\n  async deleteAllCheckedTodosDB() {\n    const response = await fetch(\n      `http://localhost:3000/todos/delete-checked/all`,\n      {\n        method: \"DELETE\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: this.getAccessToken().accesstoken,\n        },\n      }\n    );\n  }\n}\n\nconst api = new Api();\n\nemitter.subscribe(\"event:get-data-from-db\", (data) =>\n  api\n    .getDataFromDB()\n    .then((data) => {\n      console.log(data);\n\n      // console.log(\"uuuuuuuuuuu\", data);\n      store.state.todos = data.todos;\n      store.state.username = data.user;\n      if (data.tokens) {\n        store.state.username = data.tokens.user;\n        localStorage.setItem(\"token\", JSON.stringify(data.tokens));\n      }\n      emitter.emit(\"event: update-store\", {});\n    })\n    .catch((error) => {\n      emitter.emit(\"event: check-login\", { login: false });\n      console.error(\"Error:\", error);\n    })\n);\nemitter.subscribe(\"event:add-item-DB\", (data) =>\n  api.addNewItemDB(data).then((data) => {\n    // console.log(\"RES 3\", data);\n\n    emitter.emit(\"event:add-item\", {\n      title: data.title,\n      todo_id: data.todo_id,\n      completed: data.completed,\n    });\n  })\n);\n\nemitter.subscribe(\"event:delete-item\", (data) =>\n  api.deleteItemFromDB(data.id).then((data) => {\n    store.deleteItemFromStore(data.todo_id);\n  })\n);\n\nemitter.subscribe(\"event:change-checkbox\", (data) =>\n  api.changeCompletedStatusOfItemDB(data).then((data) => {\n    store.changeCompletedStatusOfItemStore(data);\n  })\n);\n\nemitter.subscribe(\"event:change-all-checkboxes\", (data) =>\n  api.checkAllTodosDB().then((data) => {\n    store.checkAllTodos();\n  })\n);\n\nemitter.subscribe(\"event:delete-all-checked\", (data) =>\n  api.deleteAllCheckedTodosDB().then((data) => {\n    store.deleteAllCheckedTodos();\n  })\n);\n\nexport default api;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App.tsx\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport api from \"./api\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}